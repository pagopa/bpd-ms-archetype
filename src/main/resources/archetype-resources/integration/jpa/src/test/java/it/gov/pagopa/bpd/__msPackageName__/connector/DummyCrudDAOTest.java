package ${package}.${msPackageName}.connector;

import eu.sia.meda.layers.connector.query.CriteriaQuery;
import ${package}.${msPackageName}.DummyCrudDAO;
import ${package}.${msPackageName}.model.entity.DummyEntity;
import it.gov.pagopa.bpd.common.BaseCrudJpaDAOTest;
import lombok.Data;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.function.Function;

public class DummyCrudDAOTest extends BaseCrudJpaDAOTest<DummyCrudDAO, DummyEntity, Long> {//FIXME: replace with proper dao, entity and id type

    @Data
    private static class DummyEntityCriteria implements CriteriaQuery<DummyEntity> {
        private String dummyEntityFieldN; //FIXME: enter the field/s of the entity you wish to search for
    }

    @Autowired
    private DummyCrudDAO dao;


    @Override
    protected DummyCrudDAO getDao() {
        return dao;
    }


    @Override
    protected CriteriaQuery<? super DummyEntity> getMatchAlreadySavedCriteria() {
        DummyCrudDAOTest.DummyEntityCriteria pmRuleCriteria = new DummyCrudDAOTest.DummyEntityCriteria();
        pmRuleCriteria.setDummyEntityFieldN("dummyEntityFieldNValue"); //FIXME: set the field/s of the entity you wish to search for

        return pmRuleCriteria;
    }


    @Override
    protected void setId(DummyEntity entity, java.io.Serializable id) {
        entity.setFieldId(id); //FIXME: sets the field corresponding to the entity id
    }


    @Override
    protected java.io.Serializable getId(DummyEntity entity) {
        return entity.getId(); //FIXME: returns the value of the field corresponding to the entity id
    }


    /**
     * {@inheritDoc}
     * It have to return null because of current Entity Id generation type
     */
    @Override
    protected Function<Integer, java.io.Serializable> idBuilderFn() {
        return (bias) -> null; //FIXME: define a function that take a bias (autogenerated value) as input and return a value used as id for new entities that will be persisted ny test cases. define a function that always return null for a autogenerated id (i.e. sequence)
    }


    @Override
    protected void alterEntityToUpdate(DummyEntity entity) {
        entity.setDummyEntityFieldM("dummyEntityFieldM-updated"); //FIXME: set the field/s to change in case of update test cases
    }

}